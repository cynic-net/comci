#!/usr/bin/env bash

SUBDIRECTORY_OK=1
. $(git --exec-path)/git-sh-setup

get_base_dir() {
    (cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")/.." && pwd)
}
base="$(get_base_dir)"

do_log() {
    local test_name=default commit format_good format_bad format_unknown
    [ _-t = _"$1" ] && { test_name="$2"; shift; shift; }
    parsed_revs=$(git rev-parse --default HEAD "$@") || exit

    commit="%C(auto)%h"
    format_good="$commit %Cgreen✓%Creset%C(auto)%d %s"
    format_bad="$commit %C(reverse red)✗%Creset%C(auto)%d %s"
    format_unknown="$commit%Creset %C(auto)?%d %s"

    while read -r rev; do
        test_status=$(git 2>/dev/null notes \
            --ref=refs/notes/tests/"$test_name" show "$rev^{tree}")
        [ $? = 0 ] || test_status=unknown

        format=
        case "$test_status" in
            good)    format="$format_good" ;;
            bad)     format="$format_bad" ;;
            unknown) format="$format_unknown" ;;
        esac

        git --no-pager log --format="$format" -1 $rev
    done < <(git rev-list $parsed_revs) \
        | git_pager
}

action="$1"; shift
case "$action" in
    log)    do_log "$@"                                         ;;
    run)    die "use 'git ci test' instead"                     ;;
    test)   exec "$base/git-test/bin/git-test" run -k "$@"      ;;
      *)    exec "$base/git-test/bin/git-test" "$action" "$@"   ;;
esac

